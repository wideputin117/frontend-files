// getting the state from redux state
const store = Redux.createStore(
  (state = 5) => state
);

// Change code below this line
var currentState = store.getState()

 //Define a function named actionCreator() that returns the action object when called.
 const action = {
    type: 'LOGIN'
  }
  
  // Define an action creator here: 
  function actionCreator() {
     return action;
   }

   //*********************************************************** */
   // dispatch the action
   const store = Redux.createStore(
    (state = {login: false}) => state
  );
  
  const loginAction = () => {
    return {
      type: 'LOGIN'
    }
  };
  
  // Dispatch the action here:
  store.dispatch(loginAction())

  //*********************************************************** */
  //************************************************************ */
  
  // modifying the state with reducer
  // default state
const defaultState = {
    login: false
  };
  
  const reducer = (state = defaultState, action) => {
    // Change code below this line
  if (action.type === "LOGIN") {
      return {
        login: true
      };
    } else {
      return state;
    }
    // Change code above this line
  };
  
  const store = Redux.createStore(reducer);
   // action
  const loginAction = () => {
    return {
      type: 'LOGIN'
    }
  };

  
//************************************************************ *//
//************************************************************ *//
  // using switch statement
  const defaultState = {
    authenticated: false
  };
  
  const authReducer = (state = defaultState, action) => {
    // Change code below this line
  switch(action.type) {
    case 'LOGIN' : return {authenticated: true};
     
     case 'LOGOUT' : return {authenticated: false};
     default: return{authenticated: false}
  }
    // Change code above this line
  };
  
  const store = Redux.createStore(authReducer);
  
  const loginUser = () => {
    return {
      type: 'LOGIN'
    }
  };
  
  const logoutUser = () => {
    return {
      type: 'LOGOUT'
    }
  };